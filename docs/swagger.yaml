basePath: /api
definitions:
  model.Account:
    properties:
      email:
        type: string
      id:
        type: integer
      is_kno:
        type: boolean
      nadzor_organ_id:
        type: integer
      name:
        type: string
    type: object
  model.AuthResponse:
    properties:
      access_token:
        description: AccessToken
        type: string
      refresh_token:
        description: RefreshToken
        type: string
    type: object
  model.Button:
    properties:
      id:
        type: integer
      link:
        type: string
      text:
        type: string
    type: object
  model.ConsultTopic:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.Consultation:
    properties:
      answer:
        type: string
      consult_topic:
        $ref: '#/definitions/model.ConsultTopic'
      consult_topic_id:
        type: integer
      control_type:
        $ref: '#/definitions/model.ControlType'
      control_type_id:
        type: integer
      date:
        type: string
      id:
        type: integer
      is_confirmed:
        type: boolean
      is_deleted:
        type: boolean
      is_need_letter:
        type: boolean
      nadzor_organ:
        $ref: '#/definitions/model.NadzonOrgan'
      nadzor_organ_id:
        type: integer
      question:
        type: string
      slot_id:
        type: integer
      time:
        type: string
      user:
        $ref: '#/definitions/model.Account'
      user_id:
        type: integer
      video_link:
        type: string
      vks_link:
        type: string
    required:
    - consult_topic_id
    - control_type_id
    - nadzor_organ_id
    - slot_id
    - time
    type: object
  model.Consultations:
    properties:
      active:
        items:
          $ref: '#/definitions/model.Consultation'
        type: array
      finished:
        items:
          $ref: '#/definitions/model.Consultation'
        type: array
    type: object
  model.ControlType:
    properties:
      consult_topics:
        items:
          $ref: '#/definitions/model.ConsultTopic'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  model.FAQ:
    properties:
      answer:
        type: string
      control_type_id:
        type: integer
      date:
        type: string
      id:
        type: integer
      likes:
        type: integer
      nadzor_organ_id:
        type: integer
      question:
        type: string
    type: object
  model.Message:
    properties:
      date:
        type: string
      id:
        type: integer
      send_by_id:
        type: integer
      text:
        type: string
      user_id:
        type: integer
    required:
    - text
    type: object
  model.NadzonOrgan:
    properties:
      control_types:
        items:
          $ref: '#/definitions/model.ControlType'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  model.Notification:
    properties:
      date:
        type: string
      id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  model.PravAct:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.ResponseError:
    properties:
      error:
        type: string
    type: object
  model.Service:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  model.Slot:
    properties:
      consultation:
        $ref: '#/definitions/model.Consultation'
      date:
        type: string
      id:
        type: integer
      time:
        type: string
    type: object
  model.TypeList:
    properties:
      nadzor_organs:
        items:
          $ref: '#/definitions/model.NadzonOrgan'
        type: array
      prav_acts:
        items:
          $ref: '#/definitions/model.PravAct'
        type: array
      services:
        items:
          $ref: '#/definitions/model.Service'
        type: array
    type: object
host: hack.torbeno.ru
info:
  contact: {}
  description: API for flutter app
  title: Hack2023
  version: "1.0"
paths:
  /v1/button:
    get:
      description: список кнопок чата
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Button'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список кнопок чата
      tags:
      - consultation
  /v1/chat:
    get:
      description: список сообщения чат-бота текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список сообщения чат-бота текущего пользователя
      tags:
      - consultation
    post:
      description: отправить сообщение чат-боту и получить ответ
      parameters:
      - description: текст сообщения
        in: formData
        minLength: 1
        name: text
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/model.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: отправить сообщение чат-боту и получить ответ
      tags:
      - consultation
  /v1/consultation:
    delete:
      description: Отменить запись на консультацию
      parameters:
      - description: id консультации которую нужно отменить
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Consultation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Отменить запись на консультацию
      tags:
      - consultation
    get:
      description: список активных и завершенных консультаций
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Consultations'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список активных и завершенных консультаций
      tags:
      - consultation
    patch:
      description: Добавление письменного ответа со стороны КНО
      parameters:
      - description: id консультации
        in: formData
        minimum: 1
        name: id
        required: true
        type: integer
      - description: Текст письменного ответа на заданный вопрос
        in: formData
        name: answer
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Consultation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Добавление письменного ответа со стороны КНО
      tags:
      - consultation
    post:
      description: записаться на консультацию
      parameters:
      - description: id надзорного органа
        in: formData
        minimum: 1
        name: nadzor_organ_id
        required: true
        type: integer
      - description: id типа контроля
        in: formData
        minimum: 1
        name: control_type_id
        required: true
        type: integer
      - description: id темы консультации
        in: formData
        minimum: 1
        name: consult_topic_id
        required: true
        type: integer
      - description: id слота с временем и датой консультации
        in: formData
        minimum: 1
        name: slot_id
        required: true
        type: integer
      - description: время в формате '03:00'
        in: formData
        name: time
        required: true
        type: string
      - description: дата в формате '2006-02-01'
        in: formData
        name: date
        required: true
        type: string
      - description: вопрос в свободной форме
        in: formData
        name: question
        required: true
        type: string
      - description: нужно ли письменное разъяснение
        in: formData
        name: is_need_letter
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Consultation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: записаться на консультацию
      tags:
      - consultation
  /v1/faq:
    get:
      description: список вопросов и ответов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FAQ'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список вопросов и ответов
      tags:
      - consultation
  /v1/login:
    post:
      description: Получение токена авторизации
      parameters:
      - description: login
        in: formData
        name: login
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AuthResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Получение токена авторизации
      tags:
      - auth
  /v1/notification:
    get:
      description: список уведомлений текущего пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Notification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список уведомлений текущего пользователя
      tags:
      - consultation
  /v1/slot:
    get:
      description: список доступных слотов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Slot'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список доступных слотов
      tags:
      - consultation
  /v1/token:
    post:
      description: Получение токена авторизации по refresh токену
      parameters:
      - description: refresh_token
        in: formData
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AuthResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Получение токена авторизации по refresh токену
      tags:
      - auth
  /v1/typelist:
    get:
      description: список надзорных органов, видов контроля, тем консультирования
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TypeList'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: список надзорных органов, видов контроля, тем консультирования
      tags:
      - consultation
  /v1/user:
    get:
      description: Получение данных о пользователе
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Account'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ResponseError'
      summary: Получение данных о пользователе
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: Enter the token with the `Bearer ` prefix, e.g. "Bearer abcde12345".
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
