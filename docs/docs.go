// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/button": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "список кнопок чата",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "список кнопок чата",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Button"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/chat": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "список сообщения чат-бота текущего пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "список сообщения чат-бота текущего пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "отправить сообщение чат-боту и получить ответ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "отправить сообщение чат-боту и получить ответ",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "текст сообщения",
                        "name": "text",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/consultation": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "список активных и завершенных консультаций",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "список активных и завершенных консультаций",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Consultations"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "записаться на консультацию",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "записаться на консультацию",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "id надзорного органа",
                        "name": "nadzor_organ_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "id типа контроля",
                        "name": "control_type_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "id темы консультации",
                        "name": "consult_topic_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "id слота с временем и датой консультации",
                        "name": "slot_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "время в формате '03:00'",
                        "name": "time",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "дата в формате '2006-02-01'",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "вопрос в свободной форме",
                        "name": "question",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "нужно ли письменное разъяснение",
                        "name": "is_need_letter",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Consultation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отменить запись на консультацию",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "Отменить запись на консультацию",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "id консультации которую нужно отменить",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Consultation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Подтверждение консультации со стороны КНО",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "Подтверждение консультации со стороны КНО",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "id консультации которую нужно подтвердить",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Подтвердить или нет консультацию",
                        "name": "apply",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Consultation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Получение токена авторизации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Получение токена авторизации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "login",
                        "name": "login",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AuthResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/notification": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "список уведомлений текущего пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "список уведомлений текущего пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/slot": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "список доступных слотов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "список доступных слотов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Slot"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/token": {
            "post": {
                "description": "Получение токена авторизации по refresh токену",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Получение токена авторизации по refresh токену",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh_token",
                        "name": "refresh_token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.AuthResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/typelist": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "список надзорных органов, видов контроля, тем консультирования",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "consultation"
                ],
                "summary": "список надзорных органов, видов контроля, тем консультирования",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TypeList"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "description": "Получение данных о пользователе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Получение данных о пользователе",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_kno": {
                    "type": "boolean"
                },
                "nadzor_organ_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.AuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "AccessToken",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "RefreshToken",
                    "type": "string"
                }
            }
        },
        "model.Button": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.ConsultTopic": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Consultation": {
            "type": "object",
            "required": [
                "consult_topic_id",
                "control_type_id",
                "nadzor_organ_id",
                "slot_id",
                "time"
            ],
            "properties": {
                "consult_topic_id": {
                    "type": "integer"
                },
                "control_type_id": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_confirmed": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_need_letter": {
                    "type": "boolean"
                },
                "nadzor_organ_id": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "slot_id": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.Account"
                },
                "user_id": {
                    "type": "integer"
                },
                "video_link": {
                    "type": "string"
                },
                "vks_link": {
                    "type": "string"
                }
            }
        },
        "model.Consultations": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Consultation"
                    }
                },
                "finished": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Consultation"
                    }
                }
            }
        },
        "model.ControlType": {
            "type": "object",
            "properties": {
                "consult_topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ConsultTopic"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "date_export": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "send_by_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.NadzonOrgan": {
            "type": "object",
            "properties": {
                "control_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ControlType"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Notification": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.PravAct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ResponseError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.Service": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Slot": {
            "type": "object",
            "properties": {
                "consultation": {
                    "$ref": "#/definitions/model.Consultation"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.TypeList": {
            "type": "object",
            "properties": {
                "nadzor_organs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.NadzonOrgan"
                    }
                },
                "prav_acts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PravAct"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Service"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Enter the token with the ` + "`" + `Bearer ` + "`" + ` prefix, e.g. \"Bearer abcde12345\".",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "hack.torbeno.ru",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Hack2023",
	Description:      "API for flutter app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
